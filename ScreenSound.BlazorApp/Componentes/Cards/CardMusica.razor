@inject NavigationManager Navigation
@inject IDialogService DialogService

<MudItem xs="2">
    <MudCard>
        <MudCardMedia Image=@Imagem Height="300" />
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">@Item.Nome</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton Title="Gênero" Icon="@Icons.Material.Filled.Info" Color="Color.Default" />
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudText Typo="Typo.body2">@Item.Genero</MudText>
        </MudCardContent>
        <MudCardActions>
            <MudButton @onclick="() => ConfirmarExclusao(Item)"
                       Variant="Variant.Text"
                       Color="Color.Secondary">
                Excluir
            </MudButton>
            <MudSpacer></MudSpacer>
            <MudRating SelectedValue="2" />
        </MudCardActions>
    </MudCard>
</MudItem>

@code {
    [Parameter] public Musica? Item { get; set; }
    public string Imagem => $"img/notamusical1.jpeg";
    private void ConfirmarExclusao(Musica musica)
    {
        var parameters = new DialogParameters<DialogScreenSoundDeleteMusica>();
        parameters.Add(x => x.ContentText, $"Deseja realmente excluir {musica.Nome}? A música será excluído da base de dados.");
        parameters.Add(x => x.ButtonText, "Excluir");
        parameters.Add(x => x.Color, Color.Error);
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
        DialogService.Show<DialogScreenSoundDeleteMusica>("Excluir Música", parameters, options);
    }

    private void AdicionarArtista()
    {
        Navigation.NavigateTo("musica/novo");
    }
}
